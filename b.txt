warning: unused import: `IntWithMax`
  --> sequila/sequila-core/src/physical_planner/joins/utils.rs:20:25
   |
20 | use coitrees::{COITree, IntWithMax};
   |                         ^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `config`
  --> sequila/sequila-core/src/physical_planner/sequila_physical_planner.rs:27:9
   |
27 |         config: &ConfigOptions,
   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: methods `left`, `right`, `filter`, `join_type`, `partition_mode`, and `null_equals_null` are never used
   --> sequila/sequila-core/src/physical_planner/joins/range_join.rs:351:12
    |
297 | impl IntervalSearchJoinExec {
    | --------------------------- methods in this implementation
...
351 |     pub fn left(&self) -> &Arc<dyn ExecutionPlan> {
    |            ^^^^
...
356 |     pub fn right(&self) -> &Arc<dyn ExecutionPlan> {
    |            ^^^^^
...
366 |     pub fn filter(&self) -> Option<&JoinFilter> {
    |            ^^^^^^
...
371 |     pub fn join_type(&self) -> &JoinType {
    |            ^^^^^^^^^
...
376 |     pub fn partition_mode(&self) -> &PartitionMode {
    |            ^^^^^^^^^^^^^^
...
381 |     pub fn null_equals_null(&self) -> bool {
    |            ^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: struct `IntervalJoinHashMap` is never constructed
   --> sequila/sequila-core/src/physical_planner/joins/utils.rs:124:12
    |
124 | pub struct IntervalJoinHashMap {
    |            ^^^^^^^^^^^^^^^^^^^

warning: associated functions `new` and `with_capacity` are never used
   --> sequila/sequila-core/src/physical_planner/joins/utils.rs:134:12
    |
133 | impl IntervalJoinHashMap {
    | ------------------------ associated functions in this implementation
134 |     pub fn new(map: FnvHashMap<String, COITree<u64, u32>>, next: Vec<u64>) -> Self {
    |            ^^^
...
137 |     pub(crate) fn with_capacity(capacity: usize) -> Self {
    |                   ^^^^^^^^^^^^^

warning: function `offset_ordering` is never used
   --> sequila/sequila-core/src/physical_planner/joins/utils.rs:496:4
    |
496 | fn offset_ordering(
    |    ^^^^^^^^^^^^^^^

warning: fields `expression`, `column_indices`, and `schema` are never read
   --> sequila/sequila-core/src/physical_planner/joins/utils.rs:585:5
    |
583 | pub struct JoinFilter {
    |            ---------- fields in this struct
584 |     /// Filter expression
585 |     expression: Arc<dyn PhysicalExpr>,
    |     ^^^^^^^^^^
586 |     /// Column indices required to construct intermediate batch for filtering
587 |     column_indices: Vec<ColumnIndex>,
    |     ^^^^^^^^^^^^^^
588 |     /// Physical schema of intermediate batch
589 |     schema: Schema,
    |     ^^^^^^
    |
    = note: `JoinFilter` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: associated items `new`, `build_column_indices`, `expression`, `column_indices`, and `schema` are never used
   --> sequila/sequila-core/src/physical_planner/joins/utils.rs:594:12
    |
592 | impl JoinFilter {
    | --------------- associated items in this implementation
593 |     /// Creates new JoinFilter
594 |     pub fn new(
    |            ^^^
...
607 |     pub fn build_column_indices(
    |            ^^^^^^^^^^^^^^^^^^^^
...
625 |     pub fn expression(&self) -> &Arc<dyn PhysicalExpr> {
    |            ^^^^^^^^^^
...
630 |     pub fn column_indices(&self) -> &[ColumnIndex] {
    |            ^^^^^^^^^^^^^^
...
635 |     pub fn schema(&self) -> &Schema {
    |            ^^^^^^

warning: method `get` is never used
    --> sequila/sequila-core/src/physical_planner/joins/utils.rs:1065:19
     |
1049 | impl<T: 'static> OnceFut<T> {
     | --------------------------- method in this implementation
...
1065 |     pub(crate) fn get(&mut self, cx: &mut Context<'_>) -> Poll<Result<&T>> {
     |                   ^^^

warning: use of `default` to create a unit struct
  --> sequila/sequila-core/src/session_context/sequila_context_ext.rs:30:63
   |
30 |                     Arc::new(RangeJoinPhysicalOptimizationRule::default()),
   |                                                               ^^^^^^^^^^^ help: remove this call to `default`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_constructed_unit_structs
   = note: `#[warn(clippy::default_constructed_unit_structs)]` on by default

warning: using `clone` on type `PartitionMode` which implements the `Copy` trait
  --> sequila/sequila-core/src/physical_planner/sequila_physical_planner.rs:41:25
   |
41 |                         join_exec.partition_mode().clone(),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*join_exec.partition_mode()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy
   = note: `#[warn(clippy::clone_on_copy)]` on by default

warning: unused variable: `i`
    --> sequila/sequila-core/src/physical_planner/joins/range_join.rs:1413:25
     |
1413 |     fn prepare_task_ctx(i: i32) -> Arc<TaskContext> {
     |                         ^ help: if this is intentional, prefix it with an underscore: `_i`
     |
     = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `config`
  --> sequila/sequila-core/src/physical_planner/sequila_physical_planner.rs:27:9
   |
27 |         config: &ConfigOptions,
   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`

warning: associated function `new` is never used
   --> sequila/sequila-core/src/physical_planner/joins/utils.rs:150:19
    |
148 | impl JoinHashMap {
    | ---------------- associated function in this implementation
149 |     #[cfg(test)]
150 |     pub(crate) fn new(map: RawTable<(u64, u64)>, next: Vec<u64>) -> Self {
    |                   ^^^

warning: `sequila-core` (lib) generated 11 warnings (run `cargo clippy --fix --lib -p sequila-core` to apply 3 suggestions)
warning: `sequila-core` (lib test) generated 13 warnings (10 duplicates) (run `cargo clippy --fix --lib -p sequila-core --tests` to apply 2 suggestions)
warning: variable does not need to be mutable
  --> sequila/sequila-cli/src/main.rs:36:9
   |
36 |     let mut ctx = SessionContext::new_with_sequila(config);
   |         ----^^^
   |         |
   |         help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: `sequila-cli` (bin "sequila-cli" test) generated 1 warning (run `cargo clippy --fix --bin "sequila-cli" --tests` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 0.19s
